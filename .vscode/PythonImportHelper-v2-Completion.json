[
    {
        "label": "reader",
        "importPath": "csv",
        "description": "csv",
        "isExtraImport": true,
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "reader",
        "importPath": "csv",
        "description": "csv",
        "isExtraImport": true,
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "defaultdict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "defaultdict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "defaultdict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "chain",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "combinations",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "combinations",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "chain",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "combinations",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "product",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "OptionParser",
        "importPath": "optparse",
        "description": "optparse",
        "isExtraImport": true,
        "detail": "optparse",
        "documentation": {}
    },
    {
        "label": "TransactionDto",
        "importPath": "TransactionDTO",
        "description": "TransactionDTO",
        "isExtraImport": true,
        "detail": "TransactionDTO",
        "documentation": {}
    },
    {
        "label": "TransactionDto",
        "importPath": "TransactionDTO",
        "description": "TransactionDTO",
        "isExtraImport": true,
        "detail": "TransactionDTO",
        "documentation": {}
    },
    {
        "label": "TransactionDto",
        "importPath": "TransactionDTO",
        "description": "TransactionDTO",
        "isExtraImport": true,
        "detail": "TransactionDTO",
        "documentation": {}
    },
    {
        "label": "TransactionDto",
        "importPath": "TransactionDTO",
        "description": "TransactionDTO",
        "isExtraImport": true,
        "detail": "TransactionDTO",
        "documentation": {}
    },
    {
        "label": "TransactionDto",
        "importPath": "TransactionDTO",
        "description": "TransactionDTO",
        "isExtraImport": true,
        "detail": "TransactionDTO",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "ItemDto",
        "importPath": "ItemDto",
        "description": "ItemDto",
        "isExtraImport": true,
        "detail": "ItemDto",
        "documentation": {}
    },
    {
        "label": "ItemDto",
        "importPath": "ItemDto",
        "description": "ItemDto",
        "isExtraImport": true,
        "detail": "ItemDto",
        "documentation": {}
    },
    {
        "label": "ItemDto",
        "importPath": "ItemDto",
        "description": "ItemDto",
        "isExtraImport": true,
        "detail": "ItemDto",
        "documentation": {}
    },
    {
        "label": "ItemDto",
        "importPath": "ItemDto",
        "description": "ItemDto",
        "isExtraImport": true,
        "detail": "ItemDto",
        "documentation": {}
    },
    {
        "label": "ItemDto",
        "importPath": "ItemDto",
        "description": "ItemDto",
        "isExtraImport": true,
        "detail": "ItemDto",
        "documentation": {}
    },
    {
        "label": "WeightTable",
        "importPath": "WeightTable",
        "description": "WeightTable",
        "isExtraImport": true,
        "detail": "WeightTable",
        "documentation": {}
    },
    {
        "label": "WeightTable",
        "importPath": "WeightTable",
        "description": "WeightTable",
        "isExtraImport": true,
        "detail": "WeightTable",
        "documentation": {}
    },
    {
        "label": "WeightTable",
        "importPath": "WeightTable",
        "description": "WeightTable",
        "isExtraImport": true,
        "detail": "WeightTable",
        "documentation": {}
    },
    {
        "label": "WeightTable",
        "importPath": "WeightTable",
        "description": "WeightTable",
        "isExtraImport": true,
        "detail": "WeightTable",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "Apriori",
        "importPath": "Apriori",
        "description": "Apriori",
        "isExtraImport": true,
        "detail": "Apriori",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "File",
        "description": "File",
        "isExtraImport": true,
        "detail": "File",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "File",
        "description": "File",
        "isExtraImport": true,
        "detail": "File",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "File",
        "description": "File",
        "isExtraImport": true,
        "detail": "File",
        "documentation": {}
    },
    {
        "label": "Utils",
        "importPath": "Utils",
        "description": "Utils",
        "isExtraImport": true,
        "detail": "Utils",
        "documentation": {}
    },
    {
        "label": "Utils",
        "importPath": "Utils",
        "description": "Utils",
        "isExtraImport": true,
        "detail": "Utils",
        "documentation": {}
    },
    {
        "label": "DS",
        "importPath": "DS",
        "description": "DS",
        "isExtraImport": true,
        "detail": "DS",
        "documentation": {}
    },
    {
        "label": "DS",
        "importPath": "DS",
        "description": "DS",
        "isExtraImport": true,
        "detail": "DS",
        "documentation": {}
    },
    {
        "label": "DS",
        "importPath": "DS",
        "description": "DS",
        "isExtraImport": true,
        "detail": "DS",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "psutil",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "psutil",
        "description": "psutil",
        "detail": "psutil",
        "documentation": {}
    },
    {
        "label": "HewiUaprior",
        "importPath": "HewiUaprior",
        "description": "HewiUaprior",
        "isExtraImport": true,
        "detail": "HewiUaprior",
        "documentation": {}
    },
    {
        "label": "WdFim",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "WdFim",
        "description": "WdFim",
        "detail": "WdFim",
        "documentation": {}
    },
    {
        "label": "WdFim",
        "importPath": "WdFim",
        "description": "WdFim",
        "isExtraImport": true,
        "detail": "WdFim",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Set",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Apriori",
        "kind": 6,
        "importPath": "Apriori",
        "description": "Apriori",
        "peekOfCode": "class Apriori:\n    def execute(self,C1ItemSet: list[frozenset],itemSetList:list[set], minSup:float,k:int,globalItemSetWithSup:defaultdict(int)):\n        \"\"\"_summary_\n        Args:\n            C1ItemSet (_type_): hubewis with k-1 \n            itemSetList (_type_): danh sách item in transactions\n            minSup (_type_): minSupport\n            minConf (_type_): min Confident\n            k (_type_): độ rộng của item \n            globalItemSetWithSup (defaultdict): count sô lần xuất hiện của item trong transactions",
        "detail": "Apriori",
        "documentation": {}
    },
    {
        "label": "DS",
        "kind": 6,
        "importPath": "DS",
        "description": "DS",
        "peekOfCode": "class DS:\n    def __init__(self, id, transactions):\n        self.id = id\n        self.transactions = transactions\n        # self.syntheticChain = self.getSyntheticChain()",
        "detail": "DS",
        "documentation": {}
    },
    {
        "label": "File",
        "kind": 6,
        "importPath": "File",
        "description": "File",
        "peekOfCode": "class File:\n    def createDataBase(self,type:str):\n        weightTableWdFim = WeightTable({'A': 0.1, 'B': 0.8, 'C': 0.3, 'D': 1.0, 'E': 0.6, 'F': 0.1})\n        transactionsDataWdFim = [\n            [('A', 0.8), ('B', 0.4), ('D', 1.0)],\n            [('B', 0.3), ('F', 0.7)],\n            [('B', 0.7), ('C', 0.9), ('E', 1.0), ('F', 0.7)],\n            [('E', 1.0), ('F', 0.5)],\n            [('A', 0.6), ('C', 0.4), ('D', 1.0)],\n            [('A', 0.8), ('B', 0.8), ('C', 1.0), ('F', 0.3)],",
        "detail": "File",
        "documentation": {}
    },
    {
        "label": "HewiUaprior",
        "kind": 6,
        "importPath": "HewiUaprior",
        "description": "HewiUaprior",
        "peekOfCode": "class HewiUaprior:\n    def execute(self,dataBase: list,minEWSup: float,reliableProbabilisticSupport:float,filename:str):\n        \"\"\"_summary_\n        Args:\n            dataBase (list): gom dataItemSet va weight table\n            minEWSup (int): min expect weight support\n            filename (str): tên file output\n        \"\"\"\n        print('start')\n        process = psutil.Process()",
        "detail": "HewiUaprior",
        "documentation": {}
    },
    {
        "label": "ItemDto",
        "kind": 6,
        "importPath": "ItemDto",
        "description": "ItemDto",
        "peekOfCode": "class ItemDto:\n    def __init__(self, item:str, probability:int):\n        self.item = item\n        self.probability = probability",
        "detail": "ItemDto",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def main():\n    expectedWeightedSupport = float(sys.argv[1])\n    if expectedWeightedSupport>1 or expectedWeightedSupport <0:\n        print('Please enter expected weighted Support between 0-1')\n        return\n    reliableProbabilisticSupport = float(sys.argv[2])\n    if reliableProbabilisticSupport>1 or reliableProbabilisticSupport <0:\n        print('Please enter reliable Probabilistic Support between 0-1')\n        return\n    dataBaseWdFim,fileNameWdFim = File().createDataBase('WdFim')",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "TransactionDto",
        "kind": 6,
        "importPath": "TransactionDTO",
        "description": "TransactionDTO",
        "peekOfCode": "class TransactionDto:\n    def __init__(self, tid, items: List[Tuple[str, float]], weightTable):\n        self.tid = tid\n        self.items = [ItemDto(item=item, probability=probability) for item, probability in items]\n        self.weightTable = weightTable\n    def calculateTubwt(self,weightTable):\n        array =[]\n        for i in self.items:\n            weight =weightTable.getWeight(i.item)\n            array.append(weight)",
        "detail": "TransactionDTO",
        "documentation": {}
    },
    {
        "label": "Utils",
        "kind": 6,
        "importPath": "Utils",
        "description": "Utils",
        "peekOfCode": "class Utils:\n    def expectedSupportCalculator(self,itemset: ItemDto, itemsetProbabilityInATransactions: [ItemDto]):\n        \"\"\"tính Expected support of an itemset in D\n        Args:\n            itemset (ItemDto): itemSet\n            itemsetProbabilityInATransactions (ItemDto]): itemset Probability In A Transactions\n        Returns:\n            _type_: Expected support\n        \"\"\"\n        total = 0",
        "detail": "Utils",
        "documentation": {}
    },
    {
        "label": "WdFim",
        "kind": 6,
        "importPath": "WdFim",
        "description": "WdFim",
        "peekOfCode": "class WdFim:\n    def execute(self,dataBase: list,minEWSup: float,reliableProbabilisticSupport:float,filename:str):    \n        print('start')\n        process = psutil.Process()\n        startTime = time.time()\n        startMemory = process.memory_info().rss / (1024 ** 2)  # in megabytes\n        # weight_table = WeightTable()\n        transactions = dataBase[0]\n        weightTable = dataBase[1]\n        # print(weightOfSyntheticChain)",
        "detail": "WdFim",
        "documentation": {}
    },
    {
        "label": "WeightTable",
        "kind": 6,
        "importPath": "WeightTable",
        "description": "WeightTable",
        "peekOfCode": "class WeightTable:\n    def __init__(self,weight:set):\n        self.weights = weight\n        # self.weights = {'A': 0.1, 'B': 0.8, 'C': 0.3, 'D': 1.0, 'E': 0.6, 'F': 1.0}\n    def getWeight(self, item):\n        return self.weights.get(item, 0.0)",
        "detail": "WeightTable",
        "documentation": {}
    }
]